{"version":3,"file":"builder-es.js","sources":["../src/builder.js"],"sourcesContent":["'use strict';\nconst {rollup} = require('rollup');\nconst path = require('path');\nconst {fork} = require('child_process');\nconst logger = require('backed-logger');\nlet iterator;\nlet cache;\nlet warnings = [];\n\nconst logWorker = fork(path.join(__dirname, 'workers/log-worker.js'));\n\nasync function * bundler(bundles, fn) {\n  let fns = [];\n  for (let bundle of bundles) {\n    let dest = bundle.dest;\n    bundle = bundle.bundle || bundle;\n    bundle.dest = dest;\n    fns.push(fn(bundle));\n  }\n\n  yield Promise.all(fns).then(bundles => {\n    logWorker.kill('SIGINT');\n    if (global.debug) {\n      for (let warning of warnings) {\n        logger.warn(warning);\n      }\n    }\n    return bundles;\n  });\n}\nclass Builder {\n\n  /**\n   * convert hyphen to a javascript property srting\n   */\n  toJsProp(string) {\n    let parts = string.split('-');\n    if (parts.length > 1) {\n      string = parts[0];\n      for (let part of parts) {\n        if (parts[0] !== part) {\n          var upper = part.charAt(0).toUpperCase();\n          string += upper + part.slice(1).toLowerCase();\n        }\n      }\n    }\n    return string;\n  }\n\n  build(config) {\n    logWorker.send('start');\n    logWorker.send(logger._chalk('building', 'cyan'));\n    this.promiseBundles(config).then(bundles => {\n      iterator = bundler(bundles, this.bundle);\n      iterator.next();\n    }).catch(error => {\n      logger.warn(error);\n    });\n  }\n\n  handleFormats(bundle) {\n    return new Promise((resolve, reject) => {\n      try {\n        const format = bundle.format;\n        let dest = bundle.dest;\n        if (format === 'iife' && !bundle.moduleName) {\n          bundle.moduleName = this.toJsProp(bundle.name);\n        } else {\n          switch (format) {\n            case 'cjs':\n              dest = bundle.dest.replace('.js', '-node.js');\n              break;\n            case 'es':\n            case 'amd':\n              dest = bundle.dest.replace('.js', `-${format}.js`);\n              break;\n            default:\n              break;\n                  // do nothing\n          }\n        }\n        resolve({bundle: bundle, dest: dest, format: format});\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  promiseBundles(config) {\n    return new Promise((resolve, reject) => {\n      let formats = [];\n      let bundles = config.bundles;\n      try {\n        for (let bundle of bundles) {\n          bundle.name = bundle.name || config.name;\n          bundle.babel = bundle.babel || config.babel;\n          bundle.sourceMap = bundle.sourceMap || config.sourceMap;\n          if (config.format && typeof config.format !== 'string' && !bundle.format) {\n            for (let format of config.format) {\n              bundle.format = format;\n              formats.push(this.handleFormats(bundle));\n            }\n          } else if (bundle.format && typeof bundle.format !== 'string') {\n            for (let format of bundle.format) {\n              bundle.format = format;\n              formats.push(this.handleFormats(bundle));\n            }\n          } else {\n            formats.push(this.handleFormats(bundle));\n          }\n        }\n        Promise.all(formats).then(bundles => {\n          resolve(bundles);\n        });\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n/**\n * @param {object} config\n * @param {string} config.src path/to/js\n * @param {string} config.dest destination to write to\n * @param {string} config.format format to build ['es', 'iife', 'amd', 'cjs']\n * @param {string} config.name the name of your element/app\n * @param {string} config.moduleName the moduleName for your element/app (not needed for es & cjs)\n * @param {boolean} config.sourceMap Wether or not to build sourceMaps defaults to 'true'\n * @param {object} config.plugins rollup plugins to use [see](https://github.com/rollup/rollup/wiki/Plugins)\n */\n  bundle(config = {src: null, dest: 'bundle.js', format: 'iife', name: null, plugins: [], moduleName: null, sourceMap: true}) {\n    return new Promise((resolve, reject) => {\n      let plugins = config.plugins || [];\n      if (config.babel) {\n        const babel = require('rollup-plugin-babel');\n        plugins.push(babel(config.babel));\n      }\n      rollup({\n        entry: `${process.cwd()}/${config.src}`,\n        plugins: plugins,\n        cache: cache, // Use the previous bundle as starting point.\n        // acorn: {\n        //   allowReserved: true\n        // },\n        onwarn: warning => {\n          warnings.push(warning);\n        }\n      }).then(bundle => {\n        cache = bundle;\n        bundle.write({\n        // output format - 'amd', 'cjs', 'es', 'iife', 'umd'\n          format: config.format,\n          moduleName: config.moduleName,\n          sourceMap: config.sourceMap,\n          dest: `${process.cwd()}/${config.dest}`\n        });\n        logWorker.send(logger._chalk(`${config.name}::build finished`, 'cyan'));\n        setTimeout(() => {\n          resolve();\n        }, 100);\n      }).catch(err => {\n        const code = err.code;\n        logWorker.send('pauze');\n        logger.error(err);\n        if (code === 'PLUGIN_ERROR' || code === 'UNRESOLVED_ENTRY') {\n          logWorker.kill('SIGINT');\n        } else {\n          logger.warn('trying to resume the build ...');\n          logWorker.send('resume');\n        }\n        reject(err);\n      });\n    });\n  }\n}\nexport default new Builder();\n"],"names":["bundles","fn","fns","bundle","dest","push","Promise","all","then","kill","global","debug","warning","warnings","warn","bundler","rollup","require","path","fork","logger","iterator","cache","logWorker","join","__dirname","Builder","string","parts","split","length","part","upper","charAt","toUpperCase","slice","toLowerCase","config","send","_chalk","promiseBundles","next","catch","error","resolve","reject","format","moduleName","toJsProp","name","replace","err","formats","babel","sourceMap","handleFormats","src","plugins","process","cwd","write","code"],"mappings":"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"}