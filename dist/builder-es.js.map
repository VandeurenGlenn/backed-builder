{"version":3,"file":"builder-es.js","sources":["../src/builder.js"],"sourcesContent":["'use strict';\nconst {rollup} = require('rollup');\nconst path = require('path');\nconst {fork} = require('child_process');\nconst logger = require('backed-logger');\nlet iterator;\nlet cache;\nlet warnings = [];\n\nconst logWorker = fork(path.join(__dirname, 'workers/log-worker.js'));\n/**\n * convert hyphen to a javascript property srting\n */\nconst toJsProp = string => {\n  let parts = string.split('-');\n  if (parts.length > 1) {\n    string = parts[0];\n    for (let part of parts) {\n      if (parts[0] !== part) {\n        var upper = part.charAt(0).toUpperCase();\n        string += upper + part.slice(1).toLowerCase();\n      }\n    }\n  }\n  return string;\n}\n\nasync function * bundler(bundles, fn, cb) {\n  let fns = [];\n  for (let bundle of bundles) {\n    let dest = bundle.dest;\n    bundle = bundle.bundle || bundle;\n    bundle.dest = dest;\n    fns.push(fn(bundle));\n  }\n\n  await Promise.all(fns).then(bundles => {\n    // TODO: Decide to implement or not, a method for transforming content\n    // TODO: When not transforming, return bundles.code or bundles...\n    logWorker.kill('SIGINT');\n    if (global.debug) {\n      for (let warning of warnings) {\n        logger.warn(warning);\n      }\n    }\n    cb(bundles)\n  }).catch(error => {\n    logWorker.kill('SIGINT');\n    logger.error(error);\n  });\n}\nclass Builder {\n\n  build(config) {\n    return new Promise((resolve, reject) => {\n    logWorker.send('start');\n    logWorker.send(logger._chalk('building', 'cyan'));\n    this.promiseBundles(config).then(bundles => {\n      iterator = bundler(bundles, this.bundle, bundles => {\n        resolve(bundles)\n      });\n      iterator.next();\n    }).catch(error => {\n      logger.warn(error);\n      reject(error);\n    });\n    });\n  }\n\n  handleFormats(bundle) {\n    return new Promise((resolve, reject) => {\n      try {\n        const format = bundle.format;\n        let dest = bundle.dest;\n        let formats = [];\n        // TODO: Check for two iife configs, throw error!\n        if (bundle.shouldRename) {\n          switch (format) {\n            case 'iife':\n              if (!bundle.moduleName) {\n                bundle.moduleName = toJsProp(bundle.name);\n              }\n              break;\n            case 'cjs':\n              dest = bundle.dest.replace('.js', '-node.js');\n              break;\n            case 'es':\n            case 'amd':\n              dest = bundle.dest.replace('.js', `-${format}.js`);\n              break;\n            default:\n              break;\n              // do nothing\n          }\n        }\n        resolve({bundle: bundle, dest: dest, format: format});\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  forBundles(bundles, cb) {\n    for (let bundle of bundles) {\n      cb(bundle);\n    }\n  }\n\n  /**\n   * Checks if another bundle has the same destintation, when true,\n   * checks if the formats are the same\n   * @param {array} bundles\n   *\n   * @example\n   * [{\n   *    dest: 'dist/index.js',\n   *    format: 'es'\n   *  }, {\n   *    dest: 'dist/index.js',\n   *    format: 'es'\n   *  }]\n   * // would result in true\n   */\n  compareBundles(bundles, cb) {\n    this.forBundles(bundles, bundle => {\n      // itterate trough the bundles\n      for (let i of bundles) {\n        // ensure we are not comaring against the same bundle\n        if (bundles.indexOf(i) !== bundles.indexOf(bundle)) {\n          // compare destination between the current bundle & other bundles;\n          if (i.dest === bundle.dest) {\n            // compare the format\n            if (i.format !== bundle.format) {\n              // rename dest so we don't conflict with other bundles\n              bundle.shouldRename = true;\n              return cb(bundle);\n            }\n          }\n        }\n      }\n      cb(bundle);\n    })\n  }\n\n  promiseBundles(config) {\n    return new Promise((resolve, reject) => {\n      let formats = [];\n      let bundles = config.bundles;\n      try {\n        this.compareBundles(bundles, bundle => {\n          bundle.name = bundle.name || config.name;\n          bundle.babel = bundle.babel || config.babel;\n          bundle.sourceMap = bundle.sourceMap || config.sourceMap;\n          if (config.format && typeof config.format !== 'string' && !bundle.format) {\n            for (let format of config.format) {\n              bundle.format = format;\n              formats.push(this.handleFormats(bundle));\n            }\n          } else {\n            formats.push(this.handleFormats(bundle));\n          }\n        });\n        Promise.all(formats).then(bundles => {\n          resolve(bundles);\n        });\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n/**\n * @param {object} config\n * @param {string} config.src path/to/js\n * @param {string} config.dest destination to write to\n * @param {string} config.format format to build ['es', 'iife', 'amd', 'cjs']\n * @param {string} config.name the name of your element/app\n * @param {string} config.moduleName the moduleName for your element/app (not needed for es & cjs)\n * @param {boolean} config.sourceMap Wether or not to build sourceMaps defaults to 'true'\n * @param {object} config.plugins rollup plugins to use [see](https://github.com/rollup/rollup/wiki/Plugins)\n */\n  bundle(config = {src: null, dest: 'bundle.js', format: 'iife', name: null, plugins: [], moduleName: null, sourceMap: true, external: []}) {\n    return new Promise((resolve, reject) => {\n      let plugins = [];\n      let requiredPlugins = {};\n\n      for (let plugin of Object.keys(config.plugins)) {\n        let required;\n        try {\n          required = require(`rollup-plugin-${plugin}`);\n        } catch (error) {\n          try {\n            required = require(path.join(process.cwd(), `/node_modules/rollup-plugin-${plugin}`));\n          } catch (error) {\n            reject(error);\n          }\n        }\n        const conf = config.plugins[plugin];\n        const name = toJsProp(plugin);\n        requiredPlugins[name] = required;\n\n        plugins.push(requiredPlugins[name](conf));\n      }\n\n      rollup({\n        entry: `${process.cwd()}/${config.src}`,\n        plugins: plugins,\n        external: config.external,\n        cache: cache,\n      // Use the previous bundle as starting point.\n        onwarn: warning => {\n          warnings.push(warning);\n        }\n      }).then(bundle => {\n        cache = bundle;\n        bundle.write({\n        // output format - 'amd', 'cjs', 'es', 'iife', 'umd'\n          format: config.format,\n          moduleName: config.moduleName,\n          sourceMap: config.sourceMap,\n          dest: `${process.cwd()}/${config.dest}`\n        });\n        setTimeout(() => {\n          logWorker.send(logger._chalk(`${config.name}::build finished`, 'cyan'));\n          logWorker.send('done');\n          logWorker.on('message', () => {\n            resolve(bundle);\n          })\n        }, 100);\n      }).catch(err => {\n        const code = err.code;\n        logWorker.send('pauze');\n        logger.error(err);\n        if (code === 'PLUGIN_ERROR' || code === 'UNRESOLVED_ENTRY') {\n          logWorker.kill('SIGINT');\n        } else {\n          logger.warn('trying to resume the build ...');\n          logWorker.send('resume');\n        }\n        reject(err);\n      });\n    });\n  }\n}\nexport default new Builder();\n"],"names":["bundles","fn","cb","fns","bundle","dest","push","Promise","all","then","kill","global","debug","warning","warnings","warn","catch","error","bundler","rollup","require","path","fork","logger","iterator","cache","logWorker","join","__dirname","toJsProp","string","parts","split","length","part","upper","charAt","toUpperCase","slice","toLowerCase","Builder","config","resolve","reject","send","_chalk","promiseBundles","next","format","formats","shouldRename","moduleName","name","replace","err","forBundles","i","indexOf","compareBundles","babel","sourceMap","handleFormats","src","plugins","external","requiredPlugins","plugin","Object","keys","required","process","cwd","conf","write","on","code"],"mappings":"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"}