{"version":3,"file":"builder-es.js","sources":["../src/builder.js"],"sourcesContent":["  'use strict';\n  const {rollup} = require('rollup');\n  const path = require('path');\n  const {fork} = require('child_process');\n  const logger = require('backed-logger');\n  let iterator;\n  let cache;\n  let warnings = [];\n\n  const logWorker = fork(path.join(__dirname, 'workers/log-worker.js'));\n\n  function * bundler(bundles, fn) {\n    for (let bundle of bundles) {\n      let dest = bundle.dest;\n      let format = bundle.format;\n      bundle = bundle.bundle || bundle;\n      bundle.dest = dest;\n      bundle.format = format;\n      yield fn(bundle);\n    }\n    logWorker.kill('SIGINT');\n    if (global.debug) {\n      for (let warning of warnings) {\n        logger.warn(warning);\n      }\n    }\n  }\n  export default class Builder {\n\n    constructor(config) {\n      logWorker.send('start');\n      logWorker.send(logger._chalk('building', 'cyan'));\n      this.build(config);\n    }\n\n    /**\n     * convert hyphen to a javascript property srting\n     */\n    toJsProp(string) {\n      let parts = string.split('-');\n      if (parts.length > 1) {\n        string = parts[0];\n        for (let part of parts) {\n          if (parts[0] !== part) {\n            var upper = part.charAt(0).toUpperCase();\n            string += upper + part.slice(1).toLowerCase();\n          }\n        }\n      }\n      return string;\n    }\n\n    build(config) {\n      this.promiseBundles(config).then(bundles => {\n        iterator = bundler(bundles, this.bundle);\n        iterator.next();\n      }).catch(error => {\n        logger.warn(error);\n      });\n    }\n\n    handleFormats(bundle, format) {\n      return new Promise((resolve, reject) => {\n        try {\n          let dest = bundle.dest;\n          if (format === 'iife' && !bundle.moduleName) {\n            bundle.moduleName = this.toJsProp(bundle.name);\n          } else {\n            switch (format) {\n              case 'cjs':\n                dest = bundle.dest.replace('.js', '-node.js');\n                break;\n              case 'es':\n              case 'amd':\n                dest = bundle.dest.replace('.js', `-${format}.js`);\n                break;\n              default:\n                break;\n                    // do nothing\n            }\n          }\n          resolve({bundle: bundle, dest: dest, format: format});\n        } catch (err) {\n          reject(err);\n        }\n      });\n    }\n\n    handleFormat(bundle, format = undefined) {\n      return new Promise(resolve => {\n        if (format) {\n          bundle.format = format;\n        }\n        if (bundle.format === 'iife' && !bundle.moduleName) {\n          bundle.moduleName = this.toJsProp(bundle.name);\n        }\n        resolve(bundle);\n      });\n    }\n\n    promiseBundles(config) {\n      return new Promise((resolve, reject) => {\n        let formats = [];\n        let bundles = config.bundles;\n        try {\n          for (let bundle of bundles) {\n            bundle.name = bundle.name || config.name;\n            bundle.babel = bundle.babel || config.babel;\n            bundle.sourceMap = bundle.sourceMap || config.sourceMap;\n            if (config.format && typeof config.format !== 'string' && !bundle.format) {\n              for (let format of config.format) {\n                formats.push(this.handleFormats(bundle, format));\n              }\n            } else if (bundle.format) {\n              formats.push(this.handleFormat(bundle));\n            } else if (!bundle.format) {\n              formats.push(this.handleFormat(bundle, config.format));\n            }\n          }\n          Promise.all(formats).then(bundles => {\n            resolve(bundles);\n          });\n        } catch (err) {\n          reject(err);\n        }\n      });\n    }\n\n  /**\n   * @param {object} config\n   * @param {string} config.src path/to/js\n   * @param {string} config.dest destination to write to\n   * @param {string} config.format format to build ['es', 'iife', 'amd', 'cjs']\n   * @param {string} config.name the name of your element/app\n   * @param {string} config.moduleName the moduleName for your element/app (not needed for es & cjs)\n   * @param {boolean} config.sourceMap Wether or not to build sourceMaps defaults to 'true'\n   * @param {object} config.plugins rollup plugins to use [see](https://github.com/rollup/rollup/wiki/Plugins)\n   */\n    bundle(config = {src: null, dest: 'bundle.js', format: 'iife', name: null, plugins: [], moduleName: null, sourceMap: true}) {\n      let plugins = config.plugins || [];\n      if (config.babel) {\n        const babel = require('rollup-plugin-babel');\n        plugins.push(babel(config.babel));\n      }\n      rollup({\n        entry: `${process.cwd()}/${config.src}`,\n        plugins: plugins,\n        cache: cache,\n        // Use the previous bundle as starting point.\n        onwarn: warning => {\n          warnings.push(warning);\n        }\n      }).then(bundle => {\n        cache = bundle;\n        bundle.write({\n          // output format - 'amd', 'cjs', 'es', 'iife', 'umd'\n          format: config.format,\n          moduleName: config.moduleName,\n          sourceMap: config.sourceMap,\n          dest: `${process.cwd()}/${config.dest}`\n        });\n        logWorker.send(logger._chalk(`${global.config.name}::build finished`, 'cyan'));\n        setTimeout(() => {\n          iterator.next();\n        }, 100);\n      }).catch(err => {\n        const code = err.code;\n        logWorker.send('pauze');\n        logger.error(err);\n        if (code === 'PLUGIN_ERROR' || code === 'UNRESOLVED_ENTRY') {\n          logWorker.kill('SIGINT');\n        } else {\n          logger.warn('trying to resume the build ...');\n          logWorker.send('resume');\n        }\n      });\n    }\n}\n"],"names":["bundler","require","rollup","path","fork","logger","iterator","cache","warnings","logWorker","join","__dirname","bundles","fn","bundle","dest","format","kill","global","debug","warn","warning","Builder","config","send","_chalk","build","string","parts","split","length","part","upper","charAt","toUpperCase","slice","toLowerCase","promiseBundles","then","next","catch","error","Promise","resolve","reject","moduleName","toJsProp","name","replace","err","undefined","formats","babel","sourceMap","push","handleFormats","handleFormat","all","src","plugins","process","cwd","write","code"],"mappings":"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"}