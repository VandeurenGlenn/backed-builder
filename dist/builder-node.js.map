{"version":3,"file":"builder-node.js","sources":["../src/builder.js"],"sourcesContent":["'use strict';\nconst {rollup} = require('rollup');\nconst path = require('path');\nconst {fork} = require('child_process');\nconst logger = require('backed-logger');\nlet iterator;\nlet cache;\nlet warnings = [];\n\nconst logWorker = fork(path.join(__dirname, 'workers/log-worker.js'));\n/**\n * convert hyphen to a javascript property srting\n */\nconst toJsProp = string => {\n  let parts = string.split('-');\n  if (parts.length > 1) {\n    string = parts[0];\n    for (let part of parts) {\n      if (parts[0] !== part) {\n        var upper = part.charAt(0).toUpperCase();\n        string += upper + part.slice(1).toLowerCase();\n      }\n    }\n  }\n  return string;\n}\n\nasync function * bundler(bundles, fn, cb) {\n  let fns = [];\n  for (let bundle of bundles) {\n    let dest = bundle.dest;\n    bundle = bundle.bundle || bundle;\n    bundle.dest = dest;\n    fns.push(fn(bundle));\n  }\n\n  await Promise.all(fns).then(bundles => {\n    // TODO: Decide to implement or not, a method for transforming content\n    // TODO: When not transforming, return bundles.code or bundles...\n    logWorker.kill('SIGINT');\n    if (global.debug) {\n      for (let warning of warnings) {\n        logger.warn(warning);\n      }\n    }\n    cb(bundles)\n  }).catch(error => {\n    logWorker.kill('SIGINT');\n    logger.error(error);\n  });\n}\nclass Builder {\n\n  build(config) {\n    return new Promise((resolve, reject) => {\n    logWorker.send('start');\n    logWorker.send(logger._chalk('building', 'cyan'));\n    this.promiseBundles(config).then(bundles => {\n      iterator = bundler(bundles, this.bundle, bundles => {\n        resolve(bundles)\n      });\n      iterator.next();\n    }).catch(error => {\n      logger.warn(error);\n      reject(error);\n    });\n    });\n  }\n\n  handleFormats(bundle) {\n    return new Promise((resolve, reject) => {\n      try {\n        const format = bundle.format;\n        let dest = bundle.dest;\n        let formats = [];\n        // TODO: Check for two iife configs, throw error!\n        if (bundle.shouldRename) {\n          switch (format) {\n            case 'iife':\n              if (!bundle.moduleName) {\n                bundle.moduleName = toJsProp(bundle.name);\n              }\n              break;\n            case 'cjs':\n              dest = bundle.dest.replace('.js', '-node.js');\n              break;\n            case 'es':\n            case 'amd':\n              dest = bundle.dest.replace('.js', `-${format}.js`);\n              break;\n            default:\n              break;\n              // do nothing\n          }\n        }\n        resolve({bundle: bundle, dest: dest, format: format});\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  forBundles(bundles, cb) {\n    for (let bundle of bundles) {\n      cb(bundle);\n    }\n  }\n\n  /**\n   * Checks if another bundle has the same destintation, when true,\n   * checks if the formats are the same\n   * @param {array} bundles\n   *\n   * @example\n   * [{\n   *    dest: 'dist/index.js',\n   *    format: 'es'\n   *  }, {\n   *    dest: 'dist/index.js',\n   *    format: 'es'\n   *  }]\n   * // would result in true\n   */\n  compareBundles(bundles, cb) {\n    this.forBundles(bundles, bundle => {\n      // itterate trough the bundles\n      for (let i of bundles) {\n        // ensure we are not comaring against the same bundle\n        if (bundles.indexOf(i) !== bundles.indexOf(bundle)) {\n          // compare destination between the current bundle & other bundles;\n          if (i.dest === bundle.dest) {\n            // compare the format\n            if (i.format !== bundle.format) {\n              // rename dest so we don't conflict with other bundles\n              bundle.shouldRename = true;\n              return cb(bundle);\n            }\n          }\n        }\n      }\n      cb(bundle);\n    })\n  }\n\n  promiseBundles(config) {\n    return new Promise((resolve, reject) => {\n      let formats = [];\n      let bundles = config.bundles;\n      try {\n        this.compareBundles(bundles, bundle => {\n          bundle.name = bundle.name || config.name;\n          bundle.babel = bundle.babel || config.babel;\n          bundle.sourceMap = bundle.sourceMap || config.sourceMap;\n          if (config.format && typeof config.format !== 'string' && !bundle.format) {\n            for (let format of config.format) {\n              bundle.format = format;\n              formats.push(this.handleFormats(bundle));\n            }\n          } else {\n            formats.push(this.handleFormats(bundle));\n          }\n        });\n        Promise.all(formats).then(bundles => {\n          resolve(bundles);\n        });\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n/**\n * @param {object} config\n * @param {string} config.src path/to/js\n * @param {string} config.dest destination to write to\n * @param {string} config.format format to build ['es', 'iife', 'amd', 'cjs']\n * @param {string} config.name the name of your element/app\n * @param {string} config.moduleName the moduleName for your element/app (not needed for es & cjs)\n * @param {boolean} config.sourceMap Wether or not to build sourceMaps defaults to 'true'\n * @param {object} config.plugins rollup plugins to use [see](https://github.com/rollup/rollup/wiki/Plugins)\n */\n  bundle(config = {src: null, dest: 'bundle.js', format: 'iife', name: null, plugins: [], moduleName: null, sourceMap: true, external: []}) {\n    return new Promise((resolve, reject) => {\n      let plugins = [];\n      let requiredPlugins = {};\n\n      for (let plugin of Object.keys(config.plugins)) {\n        let required;\n        try {\n          required = require(`rollup-plugin-${plugin}`);\n        } catch (error) {\n          try {\n            required = require(path.join(process.cwd(), `/node_modules/rollup-plugin-${plugin}`));\n          } catch (error) {\n            reject(error);\n          }\n        }\n        const conf = config.plugins[plugin];\n        const name = toJsProp(plugin);\n        requiredPlugins[name] = required;\n\n        plugins.push(requiredPlugins[name](conf));\n      }\n\n      rollup({\n        entry: `${process.cwd()}/${config.src}`,\n        plugins: plugins,\n        external: config.external,\n        cache: cache,\n      // Use the previous bundle as starting point.\n        onwarn: warning => {\n          warnings.push(warning);\n        }\n      }).then(bundle => {\n        cache = bundle;\n        bundle.write({\n        // output format - 'amd', 'cjs', 'es', 'iife', 'umd'\n          format: config.format,\n          moduleName: config.moduleName,\n          sourceMap: config.sourceMap,\n          dest: `${process.cwd()}/${config.dest}`\n        });\n        setTimeout(() => {\n          logWorker.send(logger._chalk(`${config.name}::build finished`, 'cyan'));\n          logWorker.send('done');\n          logWorker.on('message', () => {\n            resolve(bundle);\n          })\n        }, 100);\n      }).catch(err => {\n        const code = err.code;\n        logWorker.send('pauze');\n        logger.error(err);\n        if (code === 'PLUGIN_ERROR' || code === 'UNRESOLVED_ENTRY') {\n          logWorker.kill('SIGINT');\n        } else {\n          logger.warn('trying to resume the build ...');\n          logWorker.send('resume');\n        }\n        reject(err);\n      });\n    });\n  }\n}\nexport default new Builder();\n"],"names":["bundles","fn","cb","bundle","dest","push","Promise","all","fns","then","kill","global","debug","warnings","warning","warn","catch","error","bundler","require","rollup","path","fork","logger","iterator","cache","logWorker","join","__dirname","toJsProp","parts","string","split","length","part","upper","charAt","toUpperCase","slice","toLowerCase","Builder","config","resolve","reject","send","_chalk","promiseBundles","next","format","formats","shouldRename","moduleName","name","replace","err","forBundles","i","indexOf","compareBundles","babel","sourceMap","handleFormats","src","plugins","external","requiredPlugins","Object","keys","plugin","required","process","cwd","conf","write","on","code"],"mappings":"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"}